{"version":3,"sources":["data/itching.csv","Scatter/Axis.js","Scatter/Axes.js","Scatter/Circles.js","Scatter/Scatter.js","Scatter/dataTransform.js","dataParser.js","RadialLineChart/RadialLineChart.js","BarChart/BarChart.js","Menu/Menu.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Axis","this","renderAxis","axisType","props","orient","axis","d3Axis","scale","tickSize","tickPadding","ticks","d3Select","axisElement","call","className","ref","el","transform","translate","Component","scales","margins","svgDimensions","ticksX","ticksY","height","width","xProps","xScale","bottom","top","yProps","yScale","left","right","Circles","console","log","data","rowHeight","index","rScale","circles","values","map","val","j","key","cx","cy","r","fill","_randomNum","Math","floor","random","getData","value","coordinateKeys","dataType","undefined","rowKey","d3","rowTotal","d","rowKeys","rowTotals","ret","forEach","rowTotalsMax","rowValuesKeys","Object","keys","columnKeys","tmp","i","array1","array2","arr","concat","len","length","assoc","item","unshift","union","columnTotals","columnName","columnTotalsMax","valueMin","valueMax","valueExtent","coordinatesMin","coordinatesMax","coordinatesExtent","decimalPlaces","num","match","max","maxDecimalPlace","thresholds","distance","v","Number","toFixed","summary","rotate","rowIndex","columnKey","columnIndex","assign","dataTransform","maxValue","scaleBand","domain","range","padding","scaleLinear","React","parseDate","timeStamp","moment","split","format","parseTime","offset","timeString","slice","utc","utcOffset","getDayInsights","newData","date","columns","time","groupBy","getDayHoursArr","thisDayHours","groupByHoursArr","dayMean","obj","tmpSumArr","hour","push","arrayOfHours","class","filter","a","parseInt","some","e","reduce","innerRadius","outerRadius","min","fullCircle","PI","y","scaleRadial","RadialLineChart","renderRadial","x","clockConfig","line","angle","radius","curve","lineType","dataDayHours","svg","refs","svgElem","gSelect","selectAll","exit","classed","attr","transition","remove","enter","append","mean","dataParser","datum","colorScale","numColors","interpolate","yAxis","yTick","text","xTick","style","prevProps","margin","xBasic","yBasic","BarChart","renderBarChart","rangeRound","nice","svgElemBar","graphArea","defs","bandwidth","xAxis","colors","colorScaleBasic","scaleQuantize","Menu","state","chartType","setDate","setLineType","setClockConfig","event","target","name","setChartType","defaultOption","dayInsights","lines","firstValue","secondValue","configValue","onClick","onButtonClick","options","onChange","onDropdownChange","placeholder","onLineChange","onClockConfigChange","App","currentDay","then","setState","prevState","lineTypeStr","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kFAAAA,EAAOC,QAAU,IAA0B,qC,2VCMtBC,G,kMAEjBC,KAAKC,e,2CAILD,KAAKC,e,mCAIL,IAAMC,EAAQ,cAAUF,KAAKG,MAAMC,QAC7BC,EAAOC,EAAOJ,KACjBK,MAAMP,KAAKG,MAAMI,OACjBC,UAAUR,KAAKG,MAAMK,UACrBC,YAAY,CAAC,KACbC,MAAMV,KAAKG,MAAMO,OAEpBC,YAASX,KAAKY,aAAaC,KAAKR,K,+BAGxB,IAAD,OACP,OACE,uBACES,UAAS,oBAAed,KAAKG,MAAMC,QACnCW,IAAK,SAACC,GAAS,EAAKJ,YAAcI,GAClCC,UAAWjB,KAAKG,MAAMe,gB,GAzBIC,cCHnB,cAAyD,IAAtDC,EAAqD,EAArDA,OAAQC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OAChDC,EAAkBH,EAAlBG,OAAQC,EAAUJ,EAAVI,MAEVC,EAAS,CACbvB,OAAQ,SACRG,MAAOa,EAAOQ,OACdV,UAAU,gBAAD,OAAkBO,EAASJ,EAAQQ,OAAnC,KACTrB,SAAUiB,EAASJ,EAAQS,IAAMT,EAAQQ,OACzCnB,MAAOa,GAGHQ,EAAS,CACb3B,OAAQ,OACRG,MAAOa,EAAOY,OACdd,UAAU,aAAD,OAAeG,EAAQY,KAAvB,QACTzB,SAAUkB,EAAQL,EAAQY,KAAOZ,EAAQa,MACzCxB,MAAOc,GAGT,OACE,2BACE,kBAAC,EAASG,GACV,kBAAC,EAASI,KCrBKI,G,iBACnB,WAAYhC,GAAQ,IAAD,6BACjB,4CAAMA,IACNiC,QAAQC,IAAIlC,GAFK,E,sEAgBT,IAAD,EAC4DH,KAAKG,MAAhEiB,EADD,EACCA,OAAQC,EADT,EACSA,QAASiB,EADlB,EACkBA,KAAMhB,EADxB,EACwBA,cAAeiB,EADvC,EACuCA,UAAWC,EADlD,EACkDA,MACjDZ,EAA2BR,EAA3BQ,OAAgBa,GAAWrB,EAAnBY,OAAmBZ,EAAXqB,QAChBhB,EAAWH,EAAXG,OAERW,QAAQC,IAAI,QAASrC,KAAKG,MAAMmC,MAEhC,IAAMI,EAELJ,EAAKK,OAAOC,KAAI,SAACC,EAAKC,GAAN,OAChB,4BACEC,IAAK,OAASF,EAAG,IAAUA,EAAG,IAC9BG,GAAIpB,EAAOiB,EAAG,KACdI,GAAKxB,EAASJ,EAAQQ,OAAmB,IAAVU,EAAkBC,EAAMD,EAAU,IACjEW,EAAGT,EAAOI,EAAG,OACbM,KAAK,6BAKR,OACE,2BAAIT,O,GAtC2BvB,c,iBCQrC,IAAIiC,EAAa,WACb,OAAOC,KAAKC,MAAsB,GAAhBD,KAAKE,WAIrBC,EAAU,WACd,MAAO,CAAC,CACNT,IAAK,SACLJ,OAAQ,CAAC,CACPI,IAAK,OACLU,MAAOL,KACN,CACDL,IAAK,OACLU,MAAOL,KACN,CACDL,IAAK,OACLU,MAAOL,KACN,CACDL,IAAK,OACLU,MAAOL,KACN,CACDL,IAAK,OACLU,MAAOL,KACN,CACDL,IAAK,OACLU,MAAOL,KACN,CACDL,IAAK,OACLU,MAAOL,OAGX,CACEL,IAAK,MACLJ,OAAQ,CAAC,CACPI,IAAK,OACLU,MAAOL,KACN,CACDL,IAAK,OACLU,MAAOL,KACN,CACDL,IAAK,OACLU,MAAOL,KACN,CACDL,IAAK,OACLU,MAAOL,KACN,CACDL,IAAK,OACLU,MAAOL,KACN,CACDL,IAAK,OACLU,MAAOL,KACN,CACDL,IAAK,OACLU,MAAOL,OAGX,CACEL,IAAK,UACLJ,OAAQ,CAAC,CACPI,IAAK,OACLU,MAAOL,KACN,CACDL,IAAK,OACLU,MAAOL,KACN,CACDL,IAAK,OACLU,MAAOL,KACN,CACDL,IAAK,OACLU,MAAOL,KACN,CACDL,IAAK,OACLU,MAAOL,KACN,CACDL,IAAK,OACLU,MAAOL,KACN,CACDL,IAAK,OACLU,MAAOL,OAER,CACDL,IAAK,QACLJ,OAAQ,CAAC,CACPI,IAAK,OACLU,MAAOL,KACN,CACDL,IAAK,OACLU,MAAOL,KACN,CACDL,IAAK,OACLU,MAAOL,KACN,CACDL,IAAK,OACLU,MAAOL,KACN,CACDL,IAAK,OACLU,MAAOL,KACN,CACDL,IAAK,OACLU,MAAOL,KACN,CACDL,IAAK,OACLU,MAAOL,OAER,CACDL,IAAK,QACLJ,OAAQ,CAAC,CACPI,IAAK,OACLU,MAAOL,KACN,CACDL,IAAK,OACLU,MAAOL,KACN,CACDL,IAAK,OACLU,MAAOL,KACN,CACDL,IAAK,OACLU,MAAOL,KACN,CACDL,IAAK,OACLU,MAAOL,KACN,CACDL,IAAK,OACLU,MAAOL,KACN,CACDL,IAAK,OACLU,MAAOL,S,ECnIE,SAAuBd,GACrC,IAEMoB,EAAiB,CAAC,IAAK,IAAK,KAM5BC,OAAwBC,IAAbtB,EAAKS,IARA,EACD,EAafc,EAAS,WACd,GAfqB,IAejBF,EACH,OAAOG,IAAUxB,GAAM,GAFV,GAUTyB,EAAW,WAChB,GAzBqB,IAyBjBJ,EACH,OAAOG,IAAOxB,EAAKK,QAAQ,SAACqB,GAAD,OAAOA,EAAEP,SAFrB,GAUXQ,EAAU,WACf,GAlCoB,IAkChBN,EACH,OAAOrB,EAAKM,KAAI,SAACoB,GAAD,OAAOA,EAAEjB,OAFX,GAUVmB,EAAY,WACjB,GA5CoB,IA4ChBP,EAA2B,CAC9B,IAAMQ,EAAM,GAQZ,OAPAL,IAAOxB,GAAMK,SAASyB,SAAQ,SAACJ,GAC9B,IAAMH,EAASG,EAAEjB,IACjBiB,EAAErB,OAAOyB,SAAQ,SAACJ,GACjBG,EAAIN,GAAkC,qBAAhBM,EAAIN,GAA2B,EAAIM,EAAIN,GAC7DM,EAAIN,IAAWG,EAAEP,YAGZU,GAVS,GAkBZE,EAAe,WACpB,GA9DoB,IA8DhBV,EACH,OAAOG,IAAOA,IAAUI,IAFL,GAUfI,EAxEgB,IAyEjBX,EACIY,OAAOC,KAAKlC,EAAKK,OAAO,IAExB4B,OAAOC,KAAKlC,EAAK,GAAGK,OAAO,IA8B9B8B,EAAa,WAClB,GA3GqB,IA2GjBd,EACH,OAAOG,IAAUxB,EAAKK,QAAQC,KAAI,SAACoB,GAAD,OAAOA,EAAEjB,OAE5C,IAAIoB,EAAM,GAQV,OAPAL,IAAOxB,GAAMK,SAASyB,SAAQ,SAACJ,GAC9B,IAAMU,EAAM,GACZV,EAAErB,OAAOyB,SAAQ,SAACJ,EAAGW,GACpBD,EAAIC,GAAKX,EAAEjB,OAEZoB,EA7BY,SAASS,EAAQC,GAK9B,IAJA,IAAMV,EAAM,GACNW,EAAMF,EAAOG,OAAOF,GACtBG,EAAMF,EAAIG,OACRC,EAAQ,GACPF,KAAO,CACb,IAAMG,EAAOL,EAAIE,GACZE,EAAMC,KACVhB,EAAIiB,QAAQD,GACZD,EAAMC,IAAQ,GAGhB,OAAOhB,EAiBAkB,CAAMX,EAAKP,MAEXA,EAZW,GAmBbmB,EAAe,WACpB,GA7HoB,IA6HhB3B,EAAJ,CAGA,IAAIQ,EAAM,GAQV,OAPAL,IAAOxB,GAAMK,SAASyB,SAAQ,SAACJ,GAC9BA,EAAErB,OAAOyB,SAAQ,SAACJ,GACjB,IAAMuB,EAAavB,EAAEjB,IACrBoB,EAAIoB,GAA2C,qBAArBpB,EAAIoB,GAA+B,EAAIpB,EAAIoB,GACrEpB,EAAIoB,IAAevB,EAAEP,YAGhBU,GAZa,GAmBfqB,EAAkB,WACvB,GAhJoB,IAgJhB7B,EACH,OAAOG,IAAOA,IAAUwB,IAFF,GAUlBG,EAAW,WAChB,OA3JqB,IA2JjB9B,EACIG,IAAOxB,EAAKK,QAAQ,SAACqB,GAAD,OAAQA,EAAEP,UAGtCK,IAAOxB,GAAMK,SAASyB,SAAQ,SAACJ,GAC9BA,EAAErB,OAAOyB,SAAQ,SAACJ,GACjBG,EAAuB,qBAATA,EAAuBH,EAAEP,MAAQK,IAAO,CAACK,GAAMH,EAAEP,eAGzDU,GANR,IAAIA,EAJY,GAiBXuB,EAAW,WAChB,IAAIvB,EAUJ,OAtLqB,IA6KjBR,EACHQ,EAAML,IAAOxB,EAAKK,QAAQ,SAACqB,GAAD,OAAQA,EAAEP,SAEpCK,IAAOxB,GAAMK,SAASyB,SAAQ,SAACJ,GAC9BA,EAAErB,OAAOyB,SAAQ,SAACJ,GACjBG,EAAsB,qBAARA,EAAsBL,IAAO,CAACK,GAAMH,EAAEP,SAAWO,EAAEP,YAI7DU,EAXS,GAkBXwB,EACE,CAACF,EAAUC,GAObE,EAAiB,WACtB,IAAIzB,EAAM,GACV,OAvMqB,IAuMjBR,GACHD,EAAeU,SAAQ,SAACrB,GACvBoB,EAAIpB,GAAOe,IAAOxB,EAAKK,QAAQ,SAACqB,GAAD,OAAQA,EAAEjB,SAEnCoB,IAEPL,IAAOxB,GAAMK,SAASyB,SAAQ,SAACJ,GAC9BA,EAAErB,OAAOyB,SAAQ,SAACJ,GACjBN,EAAeU,SAAQ,SAACrB,GACvBoB,EAAIpB,GAAQA,KAAOoB,EAAML,IAAO,CAACK,EAAIpB,IAAOiB,EAAEjB,KAASiB,EAAEjB,YAKtDoB,GAhBe,GAuBjB0B,EAAiB,WACtB,IAAI1B,EAAM,GACV,OA9NqB,IA8NjBR,GACHD,EAAeU,SAAQ,SAACrB,GACvBoB,EAAIpB,GAAOe,IAAOxB,EAAKK,QAAQ,SAACqB,GAAD,OAAQA,EAAEjB,SAEnCoB,IAEPL,IAAOxB,GAAMK,SAASyB,SAAQ,SAACJ,GAC9BA,EAAErB,OAAOyB,SAAQ,SAACJ,GACjBN,EAAeU,SAAQ,SAACrB,GACvBoB,EAAIpB,GAAQA,KAAOoB,EAAML,IAAO,CAACK,EAAIpB,IAAOiB,EAAEjB,KAASiB,EAAEjB,YAKtDoB,GAhBe,GAuBjB2B,EAAoB,WACzB,IAAI3B,EAAM,GAIV,OAHAT,EAAeU,SAAQ,SAASrB,GAC/BoB,EAAIpB,GAAO,CAAC6C,EAAe7C,GAAM8C,EAAe9C,OAE1CoB,EALkB,GAcpB4B,EAAgB,SAASC,GAC9B,IAAMC,GAAS,GAAKD,GAAKC,MAAM,oCAC/B,OAAKA,EAGE5C,KAAK6C,IACX,GAECD,EAAM,GAAKA,EAAM,GAAGhB,OAAS,IAG7BgB,EAAM,IAAMA,EAAM,GAAK,IARjB,GAgBHE,EAAkB,WACvB,IAAIhC,EAAM,EASV,OA7RoB,IAqRhBR,GACHG,IAAOxB,GAAMK,SAASyB,SAAQ,SAACJ,GAC9BA,EAAErB,OAAOyB,SAAQ,SAACJ,GACjBG,EAAML,IAAO,CAACK,EAAK4B,EAAc/B,EAAEP,eAK/BU,EAAM,GAAK,GAAKA,EAVA,GAiBlBiC,EAAa,WAClB,IAAMC,EAAWX,EAAWD,EAE5B,MADc,CAAC,IAAM,GAAM,IAAM,IACpB7C,KAAI,SAAC0D,GAAD,OAAOC,QAAQd,EAAYa,EAAID,GAAWG,QAAQL,OAHjD,GAuDnB,MAAO,CACNM,QA9Ce,WACf,MAAO,CACN9C,SAAUA,EACVE,OAAQA,EACRE,SAAUA,EACVE,QAASA,EACTC,UAAWA,EACXG,aAAcA,EACdC,cAAeA,EACfG,WAAYA,EACZa,aAAcA,EACdE,gBAAiBA,EACjBC,SAAUA,EACVC,SAAUA,EACVC,YAAaA,EACbC,eAAgBA,EAChBC,eAAgBA,EAChBC,kBAAmBA,EACnBK,gBAAiBA,EACjBC,WAAYA,IA4BbM,OApBc,WACd,IAAMjC,EAAanC,EAAKM,KAAI,SAACoB,GAAD,OAAOA,EAAEjB,OAerC,OAdgBT,EAAK,GAAGK,OAAOC,KAAI,SAACoB,GAAD,OAAOA,EAAEjB,OACpBH,KAAI,SAACiB,EAAQ8C,GAQpC,MAAO,CACN5D,IAAKc,EACLlB,OATc8B,EAAW7B,KAAI,SAACgE,EAAWC,GAEzC,IAAMlE,EAAS4B,OAAOuC,OAAO,GAAIxE,EAAKuE,GAAalE,OAAOgE,IAG1D,OADAhE,EAAOI,IAAM6D,EACNjE,WDvJqBoE,CAAcvD,KAAWiD,UAAjDxC,E,EAAAA,QAASQ,E,EAAAA,WAEXpD,EAAU,CAAES,IAAK,GAAII,MAAO,GAAIL,OAAQ,IAAKI,KAAM,IACnDX,EAAgB,CAAEI,MAAO,IAAKD,OAAQ,KAItCuF,EAAWlD,IAAON,IAAU,GAAGb,QAAQ,SAACqB,GAAD,OAAOA,EAAEP,SAahD7B,EAASqF,cACZC,OAAOzC,GACP0C,MAAM,CAAC9F,EAAQY,KAAMX,EAAcI,MAAQL,EAAQa,QACnDkF,QAAQ,GAELpF,EAASiF,cACZC,OAAOjD,GACPkD,MAAM,CAAC7F,EAAcG,OAASJ,EAAQQ,OAAQR,EAAQS,MACtDsF,QAAQ,GAEL3E,EAAS4E,cACZH,OAAO,CAAC,EAAGF,IACXG,MAAM,CA1BS,EADA,K,GA6BIG,IAAMnG,U,8BElNtBoG,EAAY,SAAAC,GAAS,OAAIC,IAAO,GAAD,OAAID,EAAUE,MAAM,KAAK,IAAM,eACjEC,OAAO,cAAcD,MAAM,KAAK,IAE7BE,EAAY,SAACJ,EAAWK,GAC5B,IAAMC,EAAaN,EAAUE,MAAM,KAAK,GAAGK,MAAM,GAAI,GAC/CtE,EAAQoE,GAAWL,EAAUE,MAAM,KAAK,GAAIA,MAAM,KAAK,GAC7D,OAAOD,IAAOO,IAAP,UAAcF,GAAc,YAAYG,UAAUxE,GAAOkE,OAAO,aAG5DO,EAAiB,SAAA5F,GAC5B,IAAI6F,EAAU7F,EAAKM,KAAI,SAAAuC,GAAI,MAAK,CAAEiD,KAAMb,EAAUpC,EAAK7C,EAAK+F,QAAQ,KAAMC,KAAMV,EAAUzC,EAAK7C,EAAK+F,QAAQ,IAAKlD,EAAK7C,EAAK+F,QAAQ,SAEnI,OADAF,EAAQ/C,QAAQ,CAAEgD,KAAMb,EAAUjF,EAAK+F,QAAQ,IAAKC,KAAMV,EAAUtF,EAAK+F,QAAQ,GAAI/F,EAAK+F,QAAQ,MAC3FE,EAAQJ,IAGJK,EAAiB,SAAClG,EAAMkF,GACnC,IAAIiB,EAAenG,EAAKkF,GACxB,OAAOkB,EAAgBD,IAQZE,EAAU,SAAAC,GACrB,IACIC,EAAY,GAIhB,OAHAD,EAAIhG,KAAI,SAAAkG,GACND,EAAUE,KAAKD,EAAKrF,UAEfK,IAAQ+E,IAmBXH,EAAkB,SAAA5D,GACtB1C,QAAQC,IAAI,gBAAiByC,GAG7B,IADA,IAAIkE,EAAe,GACVrE,EAAE,EAAGA,EAAG,GAAIA,IACnBqE,EAAaD,KAAK,CAAChG,IAAK4B,EAAGlB,MAAO,EAAGwF,MAAO,IAQhD,OANEnE,EAAIoE,QAAO,SAAAC,GACT,IAAML,EAAOM,SAASD,EAAEzB,MAAM,KAAK,IAC/BsB,EAAaK,MAAK,SAAAC,GAAC,OAAIA,EAAEvG,MAAQ+F,MACnCE,EAAaF,GAAMrF,WAGlBuF,GAGDT,EAAU,SAAAzD,GAAG,OAAIA,EAAIyE,QAAO,SAAUrG,EAAGiG,GAG7C,OAFAjG,EAAEiG,EAAEf,MAAQlF,EAAEiG,EAAEf,OAAS,GACzBlF,EAAEiG,EAAEf,MAAMW,KAAKI,EAAEb,MACVpF,IACN,KC7EGxB,G,MAAQ,IAFwC,GAAtB,IAG9BD,EAAS,IAHU,GAAuB,GAKtC+H,EAAc,IAChBC,EAAcpG,KAAKqG,IAAIhI,EAAOD,GAAU,EAAI,EAI1CkI,GAFa7F,IAAc,SAEd,EAAIT,KAAKuG,IAEtBC,EAAIC,cACL3C,MAAM,CAACqC,EAAaC,IAsMVM,E,2MAtLbC,aAAe,WAEb,IAAMC,EAAI5C,cAEqB,gBAA3B,EAAKlH,MAAM+J,YACbD,EAAE9C,MAAM,CAAC,EAAGwC,IAGZM,EAAE9C,MAAM,CAAC,EAAI9D,KAAKuG,GAAID,EAAatG,KAAKuG,KAI1C,IAAMO,EAAOrG,MACZsG,OAAM,SAASpG,GAAK,OAAOiG,EAAEjG,EAAEjB,QAC/BsH,QAAO,SAASrG,GAAK,OAAO6F,EAAE7F,EAAEP,UAC9B6G,MAAM,EAAKnK,MAAMoK,UAEdjI,EAAO,EAAKnC,MAAMqK,aAExBpI,QAAQC,IAAI,QAAS,EAAKlC,MAAM+J,aAEhC,IAAMO,EAAM3G,IAAU,EAAK4G,KAAKC,SAC1BC,EAAUH,EAAII,UAAU,WAAWvI,KAAKA,GAE9CsI,EAAQE,OACPC,QAAQ,UAAU,GAClBC,KAAK,UAAW,IAChBC,aACAD,KAAK,UAAW,GAChBE,SAIYN,EAAQO,QAAQC,OAAO,KAGnCJ,KAAK,YAAa,aAAetJ,EAAQ,EAAI,IAAMD,EAAS,EAAI,KAChEsJ,QAAQ,UAAU,GAENH,EAAQE,OAAOC,QAAQ,UAAU,GAE7CC,KAAK,UAAW,IAChBC,aACAD,KAAK,UAAW,GAChBE,SAED9I,QAAQC,IAAI,QAASC,GAUrB,IAAM+I,EAAOC,EAAmBhJ,GAEhC2H,EAAE/C,OAAOpD,IAAUxB,GAAM,SAAS0B,GAAK,OAAOA,EAAEjB,QAChD8G,EAAE3C,OAAOpD,IAAUxB,GAAM,SAAS0B,GAAK,OAAOA,EAAEP,UAGjCK,IAAa,WAAWsH,OAAO,QAC3CG,MAAMjJ,GACN0I,KAAK,OAAQ,yBACbA,KAAK,SAAU,WACfA,KAAK,eAAgB,GACrBA,KAAK,UAAW,KAChBA,KAAK,IAAKb,GANb,IASIqB,EAAa1H,MACdoD,OAAO,CAAC,EAAE,IAAgBuE,IAC1BtE,MAAM,CAAC,UAAW,UAAW,YAC7BuE,YAAY5H,KAcX6H,GAZW7H,IAAa,WAAWsH,OAAO,QAAQA,OAAO,kBAC1DJ,KAAK,KAAM,mBACXA,KAAK,gBAAiB,kBACtBA,KAAK,KAAM,MACXA,KAAK,KAAM,MACXA,KAAK,IAAK,OACVH,UAAU,QACVvI,KAAKwB,IAbQ,KAcbqH,QAAQC,OAAO,QACfJ,KAAK,UAAU,SAAShH,EAAEW,GAAK,OAAQA,EAAE,EAAc,GAAK,GAAM,OAClEqG,KAAK,cAAc,SAAShH,GAAK,OAAOwH,EAAWxH,MAE1CF,IAAa,WAAWsH,OAAO,KAC1CJ,KAAK,cAAe,WAEjBY,EAAQD,EACXd,UAAU,WAEVvI,KAAKuH,EAAEnJ,MAAM,IACbyK,QAAQC,OAAO,KAEhBQ,EAAMR,OAAO,UACVJ,KAAK,OAAQ,QACbA,KAAK,SAAU,WACfA,KAAK,UAAW,IAChBA,KAAK,KAAK,SAAShH,GAAI,OAAO6F,EAAE7F,MAGnC2H,EAAMP,OAAO,UACVJ,KAAK,OAAQ,QACbA,KAAK,SAAU,WACfA,KAAK,eAAgB,GACrBA,KAAK,KAAK,WAAa,OAAOnB,EAAEwB,MAEnCM,EAAMP,OAAO,UACVJ,KAAK,OAAQ,SACbA,KAAK,SAAU,SACfA,KAAK,UAAW,GAChBA,KAAK,KAAK,WAAa,OAAOnB,EAAEA,EAAE3C,SAAS,OAE9C0E,EAAMR,OAAO,QACVJ,KAAK,KAAK,SAAShH,GAAK,OAAQ6F,EAAE7F,MAClCgH,KAAK,KAAM,UACXa,MAAK,SAAS7H,EAAGW,GAChB,OAAU,IAANX,EACG,GAGAA,KAKT,IAEI8H,EAFQrB,EAAII,UAAU,WAAWO,OAAO,KAIzCP,UAAU,WACVvI,KAAK2H,EAAEvJ,MAAM,KACbyK,QAAQC,OAAO,KACfJ,KAAK,cAAe,UACpBA,KAAK,aAAa,SAAShH,GAC5B,MAAO,WAAsB,IAARiG,EAAEjG,GAAYX,KAAKuG,GAAK,IAAM,cAAgBJ,EAAc,SAGnFsC,EAAMV,OAAO,QACVJ,KAAK,MAAO,GACZA,KAAK,SAAU,WAElBc,EAAMV,OAAO,QACVJ,KAAK,aAAa,SAAShH,GAC1B,IAAIoG,EAAQH,EAAEjG,EAAEjB,KAChB,OAASqH,EAAQ/G,KAAKuG,GAAK,GAAOQ,EAAmB,EAAV/G,KAAKuG,GAAS,EAAO,4BAA8B,kCAC3FiC,MAAK,SAAS7H,GACf,OAAOA,KAEZ+H,MAAM,YAAa,IACnBf,KAAK,QAAS,WACdA,KAAK,UAAW,I,kFArKHgB,GACbA,IAAchM,KAAKG,QACrB2D,IAAU,OAAO+G,UAAU,KAAKK,SAChClL,KAAKgK,kB,0CAKPhK,KAAKgK,iB,+BA6KJ,OACE,yBAAKlJ,UAAU,0BAEb,yBAAKY,MAAO,IAAKD,OAAQ,IACrBV,IAAI,iB,GA3LcuG,IAAMnG,W,QChBhC8K,G,MAAe,IAAfA,EAAgD,GAChDvK,GAAQ,IAAMuK,EADY,GAE1BxK,GAAS,IAAMwK,EAFuB,GAKtCC,GAASjF,cACFE,MAAM,CAAC,EAAGzF,KACV0F,QAAQ,IACf+E,GAAS9E,cACFF,MAAM,CAAC1F,GAAQ,IAyKX2K,G,2LApKKJ,GACbA,IAAchM,KAAKG,QACrB2D,IAAU,OAAO+G,UAAU,KAAKK,SAChClL,KAAKqM,oB,0CAMNrM,KAAKqM,mB,uCAOP,IAAM/J,EAAOtC,KAAKG,MAAMqK,aAClBP,EAAIhD,cACPqF,WAAW,CAAC,EAAG5K,KACfwF,OAAO5E,EAAKM,KAAI,SAACoB,GAAD,OAAOA,EAAEjB,QACzBqE,QAAQ,IAELyC,EAAIxC,cACPF,MAAM,CAAC1F,GAAQ,IACfyF,OAAO,CACNpD,IAAOxB,GAAM,SAAS0B,GAAK,OAAOA,EAAEP,SACpCK,IAAOxB,GAAM,SAAS0B,GAAK,OAAOA,EAAEP,WAErC8I,OAEG9B,EAAM3G,IAAU9D,KAAK0K,KAAK8B,YAE1BC,EAAYhC,EACjBW,OAAO,KACPJ,KAAK,YAFY,oBAEciB,EAFd,aAE8BA,EAF9B,MAIZS,EAAOjC,EAAIW,OAAO,QAGpBI,EAAa1H,MACdoD,OAAO,CAAC,EAAE,IAAgBuE,IAC1BtE,MAAM,CAAC,UAAW,UAAW,YAC7BuE,YAAY5H,KAEI4I,EAAKtB,OAAO,kBAC5BJ,KAAK,KAAM,eAEXA,KAAK,KAAM,MACXA,KAAK,KAAM,MACXA,KAAK,KAAM,MACXA,KAAK,KAAM,QACXA,KAAK,gBAAiB,kBACtBH,UAAU,QACVvI,KAAKwB,IAfQ,KAgBbqH,QAAQC,OAAO,QACfJ,KAAK,UAAU,SAAShH,EAAEW,GAAK,OAAQA,EAAE,EAAc,GAAK,GAAM,OAClEqG,KAAK,cAAc,SAAShH,GAAK,OAAOwH,EAAWxH,MAEtD0I,EACGtB,OAAO,YACPJ,KAAK,KAAM,kBACXH,UAAU,OACVvI,KAAKA,GACL6I,QACAC,OAAO,QACPJ,KAAK,KAAK,SAAAhH,GAAC,OAAIiG,EAAEjG,EAAEjB,QACnBiI,KAAK,KAAK,SAAAhH,GAAC,OAAI6F,EAAE7F,EAAEP,UACnBuH,KAAK,QAASf,EAAE0C,aAChB3B,KAAK,UAAU,SAAAhH,GAAC,OAAIvC,GAASoI,EAAE7F,EAAEP,UAEnBgJ,EACdrB,OAAO,KACPJ,KAAK,YAFS,wBAKdI,OAAO,QACPJ,KAAK,IAAK,GACVA,KAAK,IAAK,GACVA,KAAK,QAAStJ,IACdsJ,KAAK,SAAUvJ,IACfsK,MAAM,OAAQ,qBAEjB,IAAMa,EAAQ9I,IAAcmG,GACtB0B,EAAQ7H,IAAY+F,GAAGnJ,MAAM,GAExB+L,EACRrB,OAAO,KACPJ,KAAK,QAAS,QACdA,KAAK,YAHG,uBAG0BvJ,GAH1B,MAIRZ,KAAK+L,GAEL/B,UAAU,QACVkB,MAAM,cAAe,SACrBA,MAAM,qBAAsB,UAC5Bf,KAAK,YAHR,iBAKAyB,EACGrB,OAAO,KACPJ,KAAK,QAAS,QACdnK,KAAK8K,K,4CAMN,IAAMrJ,EAAOtC,KAAKG,MAAMqK,aACxBpI,QAAQC,IAAI,iBAAkBC,GAE9B,IAAMmI,EAAM3G,IAAU9D,KAAK0K,KAAK8B,YAE5BK,EAAS,CAAC,UAAW,UAAW,WAEhCC,EAAkBC,cACnB7F,OAAO,CAAC,EAAG2F,EAAO5H,OAAS,EAAGnB,IAAOxB,GAAM,SAAS0B,GACnD,OAAOA,EAAEP,WAEV0D,MAAM0F,GAGTX,GAAOhF,OAAO5E,EAAKM,KAAI,SAASoB,GAAK,OAAOA,EAAEjB,QAC9CoJ,GACCjF,OAAO,CACNpD,IAAOxB,GAAM,SAAS0B,GAAK,OAAOA,EAAEP,SACpCK,IAAOxB,GAAM,SAAS0B,GAAK,OAAOA,EAAEP,WAErC8I,OAID9B,EAAII,UAAU,QACTvI,KAAKA,GACP6I,QAAQC,OAAO,QACbJ,KAAK,QAAS,OACdA,KAAK,KAAK,SAAShH,GAAK,OAAOkI,GAAOlI,EAAEjB,QACxCiI,KAAK,QAASkB,GAAOS,aACrB3B,KAAK,KAAK,SAAShH,GAAK,OAAOmI,GAAOnI,EAAEP,UACxCuH,KAAK,UAAU,SAAShH,GAAK,OAAOvC,GAAS0K,GAAOnI,EAAEP,UACtDuH,KAAK,QAAQ,SAAShH,GAAK,OAAO8I,EAAgB9I,EAAEP,UAGzDgH,EAAIW,OAAO,KACNJ,KAAK,YAAa,eAAiBvJ,GAAS,KAC5CZ,KAAKiD,IAAcoI,KAGxBzB,EAAIW,OAAO,KACNvK,KAAKiD,IAAYqI,O,+BAMtB,OACE,yBAAKrL,UAAU,0BAEf,yBAAKY,MAAO,IAAKD,OAAQ,IACrBV,IAAI,oB,GA9JSuG,IAAMnG,W,oBCyFd6L,I,wBAnGb,aAAe,IAAD,8BACZ,+CACKC,MAAQ,CACXC,UAAW,UAHD,E,yKAeG5D,GACftJ,KAAKG,MAAMgN,QAAQ7D,EAAE7F,S,mCAGV6F,GACK,UAAZA,EAAE7F,OACJzD,KAAKG,MAAMiN,YAAYtJ,IAAqB,SAE9B,WAAZwF,EAAE7F,OACJzD,KAAKG,MAAMiN,YAAYtJ,IAAsB,UAE/B,WAAZwF,EAAE7F,OACJzD,KAAKG,MAAMiN,YAAYtJ,IAAgB,UAEzB,aAAZwF,EAAE7F,OACJzD,KAAKG,MAAMiN,YAAYtJ,IAAwB,YAEjC,YAAZwF,EAAE7F,OACJzD,KAAKG,MAAMiN,YAAYtJ,IAA0B,WAEnC,YAAZwF,EAAE7F,OACJzD,KAAKG,MAAMiN,YAAYtJ,IAAiB,a,0CAIxBwF,GACF,gBAAZA,EAAE7F,OACJzD,KAAKG,MAAMkN,eAAe,eAEZ,kBAAZ/D,EAAE7F,OACJzD,KAAKG,MAAMkN,eAAe,mB,oCAIhBC,GACZlL,QAAQC,IAAIiL,EAAMC,OAAOC,MACzBxN,KAAKG,MAAMsN,aAAaH,EAAMC,OAAOC,Q,+BAG7B,IAAD,OAEDE,EAAgBnJ,OAAOC,KAAKxE,KAAKG,MAAMwN,aAAa,GACpDC,EAAQ,CAAC,WAAY,SAAU,QAAS,SAAU,UAAW,WAC7D1D,EAAc,CAAC,cAAe,iBAC9B2D,EAAa7N,KAAKG,MAAM0N,YAAcH,EACtCI,EAAc9N,KAAKG,MAAM2N,aAAeF,EAAM,GAC9CG,EAAc/N,KAAKG,MAAM4N,aAAe7D,EAAY,GAE1D,OACE,yBAAKpJ,UAAU,QACb,8CACA,yBAAKA,UAAU,cAAf,aAEE,6BAAM,6BACN,4BAAQA,UAAsC,WAAzBd,KAAKG,MAAM+M,UAA0B,iBAAkB,iBAC1Ec,QAAS,SAAC1E,GAAD,OAAO,EAAK2E,cAAc3E,IACnCkE,KAAK,UAFP,UAGA,4BAAQ1M,UAAsC,aAAzBd,KAAKG,MAAM+M,UAA4B,iBAAkB,iBAC5Ec,QAAS,SAAC1E,GAAD,OAAO,EAAK2E,cAAc3E,IACnCkE,KAAK,YAFP,cARJ,MAaE,kBAAC,KAAD,CAAUU,QAAS3J,OAAOC,KAAKxE,KAAKG,MAAMwN,aAAcQ,SAAU,SAAC7E,GAAD,OAAO,EAAK8E,iBAAiB9E,IAAI7F,MAAOoK,EAAYQ,YAAY,qBAGvG,WAAzBrO,KAAKG,MAAM+M,WACX,6BACA,wCACA,kBAAC,KAAD,CAAUgB,QAASN,EAAOO,SAAU,SAAC7E,GAAD,OAAO,EAAKgF,aAAahF,IAAI7F,MAAOqK,EAAaO,YAAY,qBACjG,kDACA,kBAAC,KAAD,CAAUH,QAAShE,EAAaiE,SAAU,SAAC7E,GAAD,OAAO,EAAKiF,oBAAoBjF,IAAI7F,MAAOsK,EAAaM,YAAY,sBAIrF,aAAzBrO,KAAKG,MAAM+M,WACT,mC,GA7FO/L,c,ukBC4HJqN,G,YAtHb,WAAYrO,GAAQ,IAAD,8BACjB,4CAAMA,KACD8M,MAAQ,CACXwB,WAAY,aACZlE,SAAUzG,IACVoJ,UAAW,SACXhD,YAAa,eANE,E,iFAUE,IAAD,OAClBpG,IAAOxB,KAAMoM,MAAK,SAAApM,GAYhB,IAAMkI,EAAec,EAA0BA,EAA0BhJ,GAAO,EAAK2K,MAAMwB,YAErFd,EAAcrC,EAA0BhJ,GAE9C,EAAKqM,SAAS,CACZrM,OACAkI,eACAmD,qB,8BAMEvF,GACN,IAAMqG,EAAarG,EACboC,EAAec,EAA0BA,EAA0BtL,KAAKiN,MAAM3K,MAAO8F,GAC3FpI,KAAK2O,UAAS,SAAAC,GAAS,aAClBA,EAAUrE,SADQ,GAElBqE,EAAUC,YAFQ,GAGlBD,EAAU1E,YAHQ,CAIrBuE,aACAjE,sB,kCAIQD,EAAUsE,GACpBzM,QAAQC,IAAI,iBAAkBwM,GAC9B7O,KAAK2O,UAAS,SAAAC,GAAS,aAClBA,EAAU1E,YADQ,CAErBK,WACAsE,qB,qCAIW3E,GACb9H,QAAQC,IAAI,yBAA0B6H,GACtClK,KAAK2O,SAAS,CACZzE,kB,mCAISgD,GAEX9K,QAAQC,IAAI,kBAAmB6K,GAC/BlN,KAAK2O,UAAS,SAAAC,GAAS,aAClBA,EAAUrE,SADQ,GAElBqE,EAAUC,YAFQ,GAGlBD,EAAUH,WAHQ,GAIlBG,EAAUpE,aAJQ,GAKlBoE,EAAU1E,YALQ,CAMrBgD,mB,+BAIM,IAAD,OACP,OACE,yBAAKpM,UAAU,OACb,yBAAKA,UAAU,iBAEXd,KAAKiN,MAAMU,aACX,kBAAC,GAAD,CACEA,YAAa3N,KAAKiN,MAAMU,YACxBR,QAAS,SAAA/E,GAAI,OAAI,EAAK+E,QAAQ/E,IAC9BgF,YAAa,SAAC7C,EAAUsE,GAAX,OAA2B,EAAKzB,YAAY7C,EAAUsE,IACnExB,eAAkB,SAACnD,GAAD,OAAiB,EAAKmD,eAAenD,IACvD6D,YAAe/N,KAAKiN,MAAM/C,YAC1B2D,WAAY7N,KAAKiN,MAAMwB,WACvBX,YAAa9N,KAAKiN,MAAM4B,YACxB3B,UAAWlN,KAAKiN,MAAMC,UACtBO,aAAc,SAAAP,GAAS,OAAI,EAAKO,aAAaP,OAInD,yBAAKpM,UAAU,kBACXd,KAAKiN,MAAMzC,cAAyC,WAAzBxK,KAAKiN,MAAMC,WAA0B,kBAAC,EAAD,CAAiBuB,WAAYzO,KAAKiN,MAAMwB,WACxGjE,aAAcxK,KAAKiN,MAAMzC,aACzBmD,YAAa3N,KAAKiN,MAAMU,YACxBpD,SAAUvK,KAAKiN,MAAM1C,SACrBL,YAAalK,KAAKiN,MAAM/C,cAKxBlK,KAAKiN,MAAMzC,cAAyC,aAAzBxK,KAAKiN,MAAMC,WAA4B,kBAAC,GAAD,CAAUuB,WAAYzO,KAAKiN,MAAMwB,WACjGjE,aAAcxK,KAAKiN,MAAMzC,aACzBmD,YAAa3N,KAAKiN,MAAMU,YACxBpD,SAAUvK,KAAKiN,MAAM1C,iB,GA/GjBjD,IAAMnG,WCFJ2N,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAShJ,MACvB,2DCZNiJ,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMd,MAAK,SAAAe,GACjCA,EAAaC,kB","file":"static/js/main.bc1a8fb7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/itching.ad9f77ba.csv\";","import React, { Component } from 'react'\nimport * as d3Axis from 'd3-axis'\nimport { select as d3Select } from 'd3-selection'\n\nimport './Axis.css'\n\nexport default class Axis extends Component {\n  componentDidMount() {\n    this.renderAxis()\n  }\n\n  componentDidUpdate() {\n    this.renderAxis()\n  }\n\n  renderAxis() {\n    const axisType = `axis${this.props.orient}`\n    const axis = d3Axis[axisType]()\n      .scale(this.props.scale)\n      .tickSize(-this.props.tickSize)\n      .tickPadding([12])\n      .ticks(this.props.ticks)\n\n    d3Select(this.axisElement).call(axis)\n  }\n\n  render() {\n    return (\n      <g\n        className={`Axis Axis-${this.props.orient}`}\n        ref={(el) => { this.axisElement = el; }}\n        transform={this.props.translate}\n      />\n    )\n  }\n}\n","import React from 'react'\nimport Axis from './Axis'\n\nexport default ({ scales, margins, svgDimensions, ticksX, ticksY }) => {\n  const { height, width } = svgDimensions\n\n  const xProps = {\n    orient: 'Bottom',\n    scale: scales.xScale,\n    translate: `translate(0, ${height - margins.bottom})`,\n    tickSize: height - margins.top - margins.bottom,\n    ticks: ticksX\n  }\n\n  const yProps = {\n    orient: 'Left',\n    scale: scales.yScale,\n    translate: `translate(${margins.left}, 0)`,\n    tickSize: width - margins.left - margins.right,\n    ticks: ticksY\n  }\n\n  return (\n    <g>\n      <Axis {...xProps} />\n      <Axis {...yProps} />\n    </g>\n  )\n}\n","import React, { Component } from 'react'\nimport { scaleLinear } from 'd3-scale'\nimport { interpolateLab } from 'd3-interpolate'\n\nexport default class Circles extends Component {\n  constructor(props) {\n    super(props)\n    console.log(props)\n  }\n\n  // renderCircle = (d) => {\n  //   return (\n  //     <circle\n  //      cx={this.props.xScale(d['key'])}\n  //      cy={this.props.yScale(d['value'])}\n  //      r={2}\n  //      key={Math.random() * 1}\n  //     />\n  //   )\n  // }\n\n  render() {\n    const { scales, margins, data, svgDimensions, rowHeight, index } = this.props\n    const { xScale, yScale, rScale } = scales\n    const { height } = svgDimensions\n\n    console.log(\"data \", this.props.data)\n\n    const circles = (\n\n     data.values.map((val, j) =>\n     <circle\n       key={'key-' + val['key'] + val['key']}\n       cx={xScale(val['key'])}\n       cy={(height - margins.bottom - rowHeight*1.4) - (index*rowHeight*1.4)}\n       r={rScale(val['value'])}\n       fill='rgb(65, 44, 201, 0.7)'\n     />\n     )\n   )\n\n    return (\n      <g>{circles}</g>\n      // <g>{this.props.data.map(d => this.renderCircle(d))}</g>\n    )\n  }\n}\n","import React, {createRef} from 'react';\nimport './../Scatter/scatter.scss';\nimport * as d3 from \"d3\";\nimport {scaleLinear, scaleBand} from 'd3-scale';\nimport Axes from './Axes'\nimport { select as d3Select } from 'd3-selection'\n// import data from './../data/data'\n// import data from './../data/itching.csv';\nimport Circles from './Circles'\nimport moment from 'moment'\nimport dataTransform from \"./dataTransform\";\n\nlet _randomNum = function() {\n    return Math.floor(Math.random() * 20);\n  };\n\n\nconst getData = () => {\n  return [{\n    key: \"Apples\",\n    values: [{\n      key: \"2004\",\n      value: _randomNum()\n    }, {\n      key: \"2005\",\n      value: _randomNum()\n    }, {\n      key: \"2006\",\n      value: _randomNum()\n    }, {\n      key: \"2007\",\n      value: _randomNum()\n    }, {\n      key: \"2008\",\n      value: _randomNum()\n    }, {\n      key: \"2009\",\n      value: _randomNum()\n    }, {\n      key: \"2010\",\n      value: _randomNum()\n    }]\n  },\n  {\n    key: \"COs\",\n    values: [{\n      key: \"2004\",\n      value: _randomNum()\n    }, {\n      key: \"2005\",\n      value: _randomNum()\n    }, {\n      key: \"2006\",\n      value: _randomNum()\n    }, {\n      key: \"2007\",\n      value: _randomNum()\n    }, {\n      key: \"2008\",\n      value: _randomNum()\n    }, {\n      key: \"2009\",\n      value: _randomNum()\n    }, {\n      key: \"2010\",\n      value: _randomNum()\n    }]\n  },\n  {\n    key: \"Oranges\",\n    values: [{\n      key: \"2004\",\n      value: _randomNum()\n    }, {\n      key: \"2005\",\n      value: _randomNum()\n    }, {\n      key: \"2006\",\n      value: _randomNum()\n    }, {\n      key: \"2007\",\n      value: _randomNum()\n    }, {\n      key: \"2008\",\n      value: _randomNum()\n    }, {\n      key: \"2009\",\n      value: _randomNum()\n    }, {\n      key: \"2010\",\n      value: _randomNum()\n    }]\n  }, {\n    key: \"Pears\",\n    values: [{\n      key: \"2004\",\n      value: _randomNum()\n    }, {\n      key: \"2005\",\n      value: _randomNum()\n    }, {\n      key: \"2006\",\n      value: _randomNum()\n    }, {\n      key: \"2007\",\n      value: _randomNum()\n    }, {\n      key: \"2008\",\n      value: _randomNum()\n    }, {\n      key: \"2009\",\n      value: _randomNum()\n    }, {\n      key: \"2010\",\n      value: _randomNum()\n    }]\n  }, {\n    key: \"Kiwis\",\n    values: [{\n      key: \"2004\",\n      value: _randomNum()\n    }, {\n      key: \"2005\",\n      value: _randomNum()\n    }, {\n      key: \"2006\",\n      value: _randomNum()\n    }, {\n      key: \"2007\",\n      value: _randomNum()\n    }, {\n      key: \"2008\",\n      value: _randomNum()\n    }, {\n      key: \"2009\",\n      value: _randomNum()\n    }, {\n      key: \"2010\",\n      value: _randomNum()\n    }]\n  }];\n}\n\n// const getData = () => {\n//   return [\n// {\n// \tkey: \"data-1\",\n// \tvalues: [\n// \t\t\t\t\t\t{key: \"2004\", value: 8},\n// \t\t\t\t\t\t{key: \"2005\", value: 4},\n// \t\t\t\t\t\t{key: \"2006\", value: 10},\n// \t\t\t\t\t\t{key: \"2007\", value: 11},\n// \t\t\t\t\t\t{key: \"2008\", value: 6},\n// \t\t\t\t\t\t{key: \"2009\", value: 10},\n// \t\t\t\t\t\t{key: \"2010\", value: 16}\n// \t\t\t\t\t]\n// },\n// {\n// \tkey: \"data-2\",\n// \tvalues: [\n// \t\t\t\t\t\t{key: \"2004\", value: 2},\n// \t\t\t\t\t\t{key: \"2005\", value: 4},\n// \t\t\t\t\t\t{key: \"2006\", value: 10},\n// \t\t\t\t\t\t{key: \"2007\", value: 7},\n// \t\t\t\t\t\t{key: \"2008\", value: 20},\n// \t\t\t\t\t\t{key: \"2009\", value: 6},\n// \t\t\t\t\t\t{key: \"2010\", value: 18}\n// \t\t\t\t\t]\n// },\n// {\n// \tkey: \"data-3\",\n// \tvalues: [\n// \t\t\t\t\t\t{key: \"2004\", value: 1},\n// \t\t\t\t\t\t{key: \"2005\", value: 2},\n// \t\t\t\t\t\t{key: \"2006\", value: 3},\n// \t\t\t\t\t\t{key: \"2007\", value: 4},\n// \t\t\t\t\t\t{key: \"2008\", value: 6},\n// \t\t\t\t\t\t{key: \"2009\", value: 10},\n// \t\t\t\t\t\t{key: \"2010\", value: 4}\n// \t\t\t\t\t]\n// },\n// {\n// \tkey: \"data-4\",\n// \tvalues: [\n// \t\t\t\t\t\t{key: \"2004\", value: 1},\n// \t\t\t\t\t\t{key: \"2005\", value: 2},\n// \t\t\t\t\t\t{key: \"2006\", value: 3},\n// \t\t\t\t\t\t{key: \"2007\", value: 4},\n// \t\t\t\t\t\t{key: \"2008\", value: 6},\n// \t\t\t\t\t\t{key: \"2009\", value: 10},\n// \t\t\t\t\t\t{key: \"2010\", value: 4}\n// \t\t\t\t\t]\n// }\n// ];\n// }\n\nconst { rowKeys, columnKeys } = dataTransform(getData()).summary()\n\nconst margins = { top: 50, right: 15, bottom: 100, left: 60 }\nconst svgDimensions = { width: 800, height: 500 }\n\nconst maxRadius = 24;\nconst minRadius = 2;\nconst maxValue = d3.max(getData()[1].values, (d) => d.value)\nlet rowHeightConst = -7;\n\n// if (this.state.data.length === 4) {\n//   console.log(\"get d\")\n//   rowHeightConst = 2;\n// }\n// else if (this.state.dat.length === 4) {\n//   rowHeightConst = -6;\n// }\n\nconst rowHeight = (maxRadius * 2) + rowHeightConst;\n\nconst xScale = scaleBand()\n  .domain(columnKeys)\n  .range([margins.left, svgDimensions.width - margins.right])\n  .padding(1);\n\nconst yScale = scaleBand()\n  .domain(rowKeys)\n  .range([svgDimensions.height - margins.bottom, margins.top])\n  .padding(1);\n\nconst rScale = scaleLinear()\n  .domain([0, maxValue])\n  .range([minRadius, maxRadius]);\n\nclass Scatter extends React.Component {\n\n  constructor() {\n    super();\n    this.xScale = scaleBand()\n    this.yScale = scaleBand()\n    this.rScale = scaleLinear()\n    this.state = {\n      data: getData()\n    }\n  }\n\n  componentDidMount() {\n\n  }\n\n  render() {\n\n    const data = this.state.data\n    const svg = d3.select(this.refs.svg)\n\n    return(\n      <div className=\"scatterContainer\">\n        <svg width={svgDimensions.width} height={svgDimensions.height} ref={(node) => { this.svg = node; }}>\n          <Axes\n           scales={{ xScale, yScale }}\n           margins={margins}\n           svgDimensions={svgDimensions}\n           ticksX={7}\n           ticksY={4}\n         />\n         <g ref={(node) => { this.chartArea = node; }} />\n        {data.map((d, i) => <Circles\n          scales={{ xScale, yScale, rScale }}\n          margins={margins}\n          data={d}\n          index={i}\n          rowKeys={rowKeys}\n          columnKeys={columnKeys}\n          maxValue={maxValue}\n          rowHeight={rowHeight}\n          svg={this.svg}\n          svgDimensions={svgDimensions}\n        />)}\n      </svg>\n      </div>\n    )\n  }\n}\n\nexport default Scatter;\n","import * as d3 from \"d3\";\n/**\n * Data Transform\n *\n * @module\n * @returns {Array}\n */\nexport default function dataTransform(data) {\n\tconst SINGLE_SERIES = 1;\n\tconst MULTI_SERIES = 2;\n\tconst coordinateKeys = ['x', 'y', 'z'];\n\t/**\n\t * Data Type\n\t *\n\t * @type {Number}\n\t */\n\tconst dataType = data.key !== undefined ? SINGLE_SERIES : MULTI_SERIES;\n\t/**\n\t * Row Key\n\t *\n\t * @returns {Array}\n\t */\n\tconst rowKey = function() {\n\t\tif (dataType === SINGLE_SERIES) {\n\t\t\treturn d3.values(data)[0];\n\t\t}\n\t}();\n\t/**\n\t * Row Total\n\t *\n\t * @returns {Array}\n\t */\n\tconst rowTotal = function() {\n\t\tif (dataType === SINGLE_SERIES) {\n\t\t\treturn d3.sum(data.values, (d) => d.value);\n\t\t}\n\t}();\n\t/**\n\t * Row Keys\n\t *\n\t * @returns {Array}\n\t */\n\tconst rowKeys = function() {\n\t\tif (dataType === MULTI_SERIES) {\n\t\t\treturn data.map((d) => d.key);\n\t\t}\n\t}();\n\t/**\n\t * Row Totals\n\t *\n\t * @returns {Array}\n\t */\n\tconst rowTotals = function() {\n\t\tif (dataType === MULTI_SERIES) {\n\t\t\tconst ret = {};\n\t\t\td3.map(data).values().forEach((d) => {\n\t\t\t\tconst rowKey = d.key;\n\t\t\t\td.values.forEach((d) => {\n\t\t\t\t\tret[rowKey] = (typeof ret[rowKey] === \"undefined\") ? 0 : ret[rowKey];\n\t\t\t\t\tret[rowKey] += d.value;\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn ret;\n\t\t}\n\t}();\n\t/**\n\t * Row Totals Max\n\t *\n\t * @returns {number}\n\t */\n\tconst rowTotalsMax = function() {\n\t\tif (dataType === MULTI_SERIES) {\n\t\t\treturn d3.max(d3.values(rowTotals));\n\t\t}\n\t}();\n\t/**\n\t * Row Value Keys\n\t *\n\t * @returns {Array}\n\t */\n\tconst rowValuesKeys = function() {\n\t\tif (dataType === SINGLE_SERIES) {\n\t\t\treturn Object.keys(data.values[0]);\n\t\t} else {\n\t\t\treturn Object.keys(data[0].values[0]);\n\t\t}\n\t}();\n\t/**\n\t * Union Two Arrays\n\t *\n\t * @private\n\t * @param {Array} array1 - First Array.\n\t * @param {Array} array2 - First Array.\n\t * @returns {Array}\n\t */\n\tconst union = function(array1, array2) {\n\t\tconst ret = [];\n\t\tconst arr = array1.concat(array2);\n\t\tlet len = arr.length;\n\t\tconst assoc = {};\n\t\twhile (len--) {\n\t\t\tconst item = arr[len];\n\t\t\tif (!assoc[item]) {\n\t\t\t\tret.unshift(item);\n\t\t\t\tassoc[item] = true;\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t};\n\t/**\n\t * Column Keys\n\t *\n\t * @returns {Array}\n\t */\n\tconst columnKeys = function() {\n\t\tif (dataType === SINGLE_SERIES) {\n\t\t\treturn d3.values(data.values).map((d) => d.key);\n\t\t}\n\t\tlet ret = [];\n\t\td3.map(data).values().forEach((d) => {\n\t\t\tconst tmp = [];\n\t\t\td.values.forEach((d, i) => {\n\t\t\t\ttmp[i] = d.key;\n\t\t\t});\n\t\t\tret = union(tmp, ret);\n\t\t});\n\t\treturn ret;\n\t}();\n\t/**\n\t * Column Totals\n\t *\n\t * @returns {Array}\n\t */\n\tconst columnTotals = function() {\n\t\tif (dataType !== MULTI_SERIES) {\n\t\t\treturn;\n\t\t}\n\t\tlet ret = {};\n\t\td3.map(data).values().forEach((d) => {\n\t\t\td.values.forEach((d) => {\n\t\t\t\tconst columnName = d.key;\n\t\t\t\tret[columnName] = (typeof(ret[columnName]) === \"undefined\" ? 0 : ret[columnName]);\n\t\t\t\tret[columnName] += d.value;\n\t\t\t});\n\t\t});\n\t\treturn ret;\n\t}();\n\t/**\n\t * Column Totals Max\n\t *\n\t * @returns {Array}\n\t */\n\tconst columnTotalsMax = function() {\n\t\tif (dataType === MULTI_SERIES) {\n\t\t\treturn d3.max(d3.values(columnTotals));\n\t\t}\n\t}();\n\t/**\n\t * Value Min\n\t *\n\t * @returns {number}\n\t */\n\tconst valueMin = function() {\n\t\tif (dataType === SINGLE_SERIES) {\n\t\t\treturn d3.min(data.values, (d) => +d.value);\n\t\t}\n\t\tlet ret;\n\t\td3.map(data).values().forEach((d) => {\n\t\t\td.values.forEach((d) => {\n\t\t\t\tret = (typeof(ret) === \"undefined\" ? d.value : d3.min([ret, +d.value]));\n\t\t\t});\n\t\t});\n\t\treturn +ret;\n\t}();\n\t/**\n\t * Value Max\n\t *\n\t * @returns {number}\n\t */\n\tconst valueMax = function() {\n\t\tlet ret;\n\t\tif (dataType === SINGLE_SERIES) {\n\t\t\tret = d3.max(data.values, (d) => +d.value);\n\t\t} else {\n\t\t\td3.map(data).values().forEach((d) => {\n\t\t\t\td.values.forEach((d) => {\n\t\t\t\t\tret = (typeof ret !== \"undefined\" ? d3.max([ret, +d.value]) : +d.value);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn ret;\n\t}();\n\t/**\n\t * Value Extent\n\t *\n\t * @returns {Array}\n\t */\n\tconst valueExtent = function() {\n\t\treturn [valueMin, valueMax];\n\t}();\n\t/**\n\t * Coordinates Min\n\t *\n\t * @returns {Array}\n\t */\n\tconst coordinatesMin = function() {\n\t\tlet ret = {};\n\t\tif (dataType === SINGLE_SERIES) {\n\t\t\tcoordinateKeys.forEach((key) => {\n\t\t\t\tret[key] = d3.min(data.values, (d) => +d[key]);\n\t\t\t});\n\t\t\treturn ret;\n\t\t} else {\n\t\t\td3.map(data).values().forEach((d) => {\n\t\t\t\td.values.forEach((d) => {\n\t\t\t\t\tcoordinateKeys.forEach((key) => {\n\t\t\t\t\t\tret[key] = (key in ret ? d3.min([ret[key], +d[key]]) : d[key]);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn ret;\n\t}();\n\t/**\n\t * Coordinates Max\n\t *\n\t * @returns {Array}\n\t */\n\tconst coordinatesMax = function() {\n\t\tlet ret = {};\n\t\tif (dataType === SINGLE_SERIES) {\n\t\t\tcoordinateKeys.forEach((key) => {\n\t\t\t\tret[key] = d3.max(data.values, (d) => +d[key]);\n\t\t\t});\n\t\t\treturn ret;\n\t\t} else {\n\t\t\td3.map(data).values().forEach((d) => {\n\t\t\t\td.values.forEach((d) => {\n\t\t\t\t\tcoordinateKeys.forEach((key) => {\n\t\t\t\t\t\tret[key] = (key in ret ? d3.max([ret[key], +d[key]]) : d[key]);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn ret;\n\t}();\n\t/**\n\t * Coordinates Extent\n\t *\n\t * @returns {Array}\n\t */\n\tconst coordinatesExtent = function() {\n\t\tlet ret = {};\n\t\tcoordinateKeys.forEach(function(key) {\n\t\t\tret[key] = [coordinatesMin[key], coordinatesMax[key]]\n\t\t});\n\t\treturn ret;\n\t}();\n\t/**\n\t * How Many Decimal Places?\n\t *\n\t * @private\n\t * @param {number} num - Float.\n\t * @returns {number}\n\t */\n\tconst decimalPlaces = function(num) {\n\t\tconst match = (\"\" + num).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n\t\tif (!match) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn Math.max(\n\t\t\t0,\n\t\t\t// Number of digits right of decimal point.\n\t\t\t(match[1] ? match[1].length : 0)\n\t\t\t// Adjust for scientific notation.\n\t\t\t-\n\t\t\t(match[2] ? +match[2] : 0)\n\t\t);\n\t};\n\t/**\n\t * Max Decimal Place\n\t *\n\t * @returns {number}\n\t */\n\tconst maxDecimalPlace = function() {\n\t\tlet ret = 0;\n\t\tif (dataType === MULTI_SERIES) {\n\t\t\td3.map(data).values().forEach((d) => {\n\t\t\t\td.values.forEach((d) => {\n\t\t\t\t\tret = d3.max([ret, decimalPlaces(d.value)])\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\t// toFixed must be between 0 and 20\n\t\treturn ret > 20 ? 20 : ret;\n\t}();\n\t/**\n\t * Thresholds\n\t *\n\t * @returns {Array}\n\t */\n\tconst thresholds = function() {\n\t\tconst distance = valueMax - valueMin;\n\t\tconst bands = [0.15, 0.40, 0.55, 0.90];\n\t\treturn bands.map((v) => Number((valueMin + (v * distance)).toFixed(maxDecimalPlace)));\n\t}();\n\t/**\n\t * Summary\n\t *\n\t * @returns {Array}\n\t */\n\tconst summary = function() {\n\t\treturn {\n\t\t\tdataType: dataType,\n\t\t\trowKey: rowKey,\n\t\t\trowTotal: rowTotal,\n\t\t\trowKeys: rowKeys,\n\t\t\trowTotals: rowTotals,\n\t\t\trowTotalsMax: rowTotalsMax,\n\t\t\trowValuesKeys: rowValuesKeys,\n\t\t\tcolumnKeys: columnKeys,\n\t\t\tcolumnTotals: columnTotals,\n\t\t\tcolumnTotalsMax: columnTotalsMax,\n\t\t\tvalueMin: valueMin,\n\t\t\tvalueMax: valueMax,\n\t\t\tvalueExtent: valueExtent,\n\t\t\tcoordinatesMin: coordinatesMin,\n\t\t\tcoordinatesMax: coordinatesMax,\n\t\t\tcoordinatesExtent: coordinatesExtent,\n\t\t\tmaxDecimalPlace: maxDecimalPlace,\n\t\t\tthresholds: thresholds\n\t\t}\n\t};\n\t/**\n\t * Rotate Data\n\t *\n\t * @returns {Array}\n\t */\n\tconst rotate = function() {\n\t\tconst columnKeys = data.map((d) => d.key);\n\t\tconst rowKeys = data[0].values.map((d) => d.key);\n\t\tconst rotated = rowKeys.map((rowKey, rowIndex) => {\n\t\t\tconst values = columnKeys.map((columnKey, columnIndex) => {\n\t\t\t\t// Copy the values from the original object\n\t\t\t\tconst values = Object.assign({}, data[columnIndex].values[rowIndex]);\n\t\t\t\t// Swap the key over\n\t\t\t\tvalues.key = columnKey;\n\t\t\t\treturn values;\n\t\t\t});\n\t\t\treturn {\n\t\t\t\tkey: rowKey,\n\t\t\t\tvalues: values\n\t\t\t};\n\t\t});\n\t\treturn rotated;\n\t};\n\treturn {\n\t\tsummary: summary,\n\t\trotate: rotate\n\t};\n}\n","import moment from 'moment';\nimport * as d3 from \"d3\";\n\nexport const extractDate = timeStamp => moment(`${timeStamp.split('T')[0]}`, 'YYYYMMDDxxx').format('YYYY-MM-DD').split('T')[0];\n\nexport const howManyInDay = arr => arr.reduce(function(obj, item) {\n  obj[item] = (obj[item] || 0) + 1;\n  return obj;\n}, {});\n\nexport const howManyInMonth = arr => arr.reduce(function(obj, item) {\n  obj[item.split('-')[1]] = (obj[item.split('-')[1]] || 0) + 1;\n  return obj;\n}, {});\n\nexport const getDayOfWeek = date => {\n  var dayOfWeek = new Date(date).getDay();\n  return isNaN(dayOfWeek) ? null : ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'][dayOfWeek];\n}\n\nconst parseDate = timeStamp => moment(`${timeStamp.split('T')[0]}`, 'YYYYMMDDxxx')\n  .format('YYYY-MM-DD').split('T')[0];\n\nconst parseTime = (timeStamp, offset) => {\n  const timeString = timeStamp.split('T')[1].slice(0, -1);\n  const value = offset || (timeStamp.split(';')[1]).split(';')[0];\n  return moment.utc(`${timeString}`, 'HH:mm:ss').utcOffset(value).format('HH:mm:ss');\n};\n\nexport const getDayInsights = data => {\n  let newData = data.map(item => ({ date: parseDate(item[data.columns[0]]), time: parseTime(item[data.columns[0]], item[data.columns[1]]) }));\n  newData.unshift({ date: parseDate(data.columns[0]), time: parseTime(data.columns[0], data.columns[1]) });\n  return groupBy(newData);\n};\n\nexport const getDayHoursArr = (data, timeStamp) => {\n  let thisDayHours = data[timeStamp]\n  return groupByHoursArr(thisDayHours)\n}\n\nexport const getDayHours = (data, timeStamp) => {\n  let thisDayHours = data[timeStamp]\n  return groupByHours(thisDayHours)\n}\n\nexport const dayMean = obj => {\n  let sum, mean\n  let tmpSumArr = []\n  obj.map(hour => {\n    tmpSumArr.push(hour.value)\n  })\n  return d3.mean(tmpSumArr)\n}\n\nconst groupByHours = arr => {\n  let groupedByObj = {}\n  for (let i=1; i< 25; i++) {\n    groupedByObj[i] = 0;\n  }\n  arr.filter(a => {\n  const hour = parseInt(a.split(':')[0])\n  if (Object.keys(groupedByObj).includes(hour.toString())) {\n      groupedByObj[hour]++;\n  } else {\n      groupedByObj[hour] = 1;\n  }\n});\nreturn groupedByObj;\n}\n\nconst groupByHoursArr = arr => {\n  console.log('groupByHours ', arr)\n  let groupedByObj = {}\n  let arrayOfHours = []\n  for (let i=0; i< 24; i++) {\n    arrayOfHours.push({key: i, value: 0, class: 0});\n  }\n  arr.filter(a => {\n    const hour = parseInt(a.split(':')[0])\n    if (arrayOfHours.some(e => e.key === hour)) {\n      arrayOfHours[hour].value++\n    }\n});\nreturn arrayOfHours;\n}\n\nconst groupBy = arr => arr.reduce(function (r, a) {\n  r[a.date] = r[a.date] || [];\n  r[a.date].push(a.time);\n  return r;\n}, {});\n\nexport const howManyWeekDayMonth = (arr, countedDays) => arr.reduce(function(obj, item) {\n  let date = new Date(item)\n  let weekdaysArr = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n  let weekdays = {}\n\n  weekdaysArr.map((day) => (\n    weekdays[day] = countedDays[item]\n  ))\n\n  obj[item.split('-')[1]] = Object.assign(\n    {},\n    weekdays\n  );\n\n  return obj\n\n}, {});\n\nexport const parseData = (data) => {\n  const cleaned = data.map(item => (item[data.columns[0]]).replace(/[-:.]/g, ''));\n  let newData = cleaned.map(item => ({ timestamp: extractDate(item) }));\n  //add at the beginning of array\n  newData.unshift({ timestamp: extractDate(data.columns[0]) });\n  const dataArr = newData.map(item => item.timestamp);\n  return dataArr\n};\n","import React, {createRef} from 'react';\nimport * as d3 from \"d3\";\nimport {scaleLinear, scaleBand, scaleTime, scaleRadial, schemeCategory20c } from 'd3-scale';\nimport { select as d3Select } from 'd3-selection'\nimport moment from 'moment'\n\nimport data from './../data/itching.csv';\nimport *  as dataParser from '../dataParser.js';\nimport './radialLineChart.scss'\n\n\nconst margin = {top: 20, right: 10, bottom: 20, left: 10};\n\nconst width = 650 - margin.left - margin.right,\n  height = 650 - margin.top - margin.bottom;\n\nconst innerRadius = 100,\n    outerRadius = Math.min(width, height) / 2 - 6;\n\nconst formatHour = d3.timeFormat(\"%I %p\")\n\nconst fullCircle = 2 * Math.PI;\n\nconst y = scaleRadial()\n    .range([innerRadius, outerRadius]);\n\n\nclass RadialLineChart extends React.Component {\n\n componentDidUpdate(prevProps) {\n   if (prevProps !== this.props) {\n     d3.select(\"svg\").selectAll(\"*\").remove();\n     this.renderRadial();\n   }\n }\n\n componentDidMount() {\n   this.renderRadial()\n }\n\n  renderRadial = () => {\n\n    const x = scaleLinear()\n\n    if (this.props.clockConfig === 'Midnight Up') {\n      x.range([0, fullCircle]);\n    }\n    else {\n      x.range([0 + Math.PI, fullCircle + Math.PI]);\n    }\n\n\n    const line = d3.lineRadial()\n  \t\t.angle(function(d) { return x(d.key); })\n  \t\t.radius(function(d) { return y(d.value); })\n      .curve(this.props.lineType)\n\n    const data = this.props.dataDayHours;\n\n    console.log('LINE ', this.props.clockConfig)\n\n    const svg = d3.select(this.refs.svgElem);\n    const gSelect = svg.selectAll('.radial').data(data);\n\n    gSelect.exit()\n    .classed('radial', false)\n    .attr('opacity', 0.8)\n    .transition()\n    .attr('opacity', 0)\n    .remove();\n\n    // current.interrupt();\n\n    var gEnter = gSelect.enter().append(\"g\")\n    // const g = svg\n    // .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\")\n    .classed('radial', true);\n\n    const exit = gSelect.exit().classed('radial', false);\n    exit\n    .attr('opacity', 0.8)\n    .transition()\n    .attr('opacity', 0)\n    .remove();\n\n    console.log('data ', data)\n\n    // Avg per month or per day (to compare) compare weekday with avg weekday\n    // make options to see how could it be compared\n    // minute by minute discuss in the report\n    // See different averages and compare?\n    // draw linecharts as a calendar -> to compare days in a month\n    // weekly data -> ranges radial chart with lines\n    // 26.11 14:00 meeting with Jakob\n\n    const mean = dataParser.dayMean(data)\n\n    x.domain(d3.extent(data, function(d) { return d.key; }));\n    y.domain(d3.extent(data, function(d) { return d.value; }));\n\n    // var linePlot = gSelect.append(\"path\")\n    var linePlot = d3.selectAll('.radial').append(\"path\")\n      .datum(data)\n      .attr(\"fill\", \"url(#gradientRainbow)\")\n      .attr(\"stroke\", \"#213946\")\n      .attr(\"stroke-width\", 1)\n      .attr('z-index', 200)\n      .attr(\"d\", line);\n\n    var numColors = 10;\n    var colorScale = d3.scaleLinear()\n      .domain([0,(numColors-1)/2,numColors-1])\n      .range([\"#F5D801\", \"#74D877\", \"#2A4858\"])\n      .interpolate(d3.interpolateHcl);\n\n    var gradient = d3.selectAll('.radial').append(\"defs\").append(\"radialGradient\")\n      .attr(\"id\", \"gradientRainbow\")\n      .attr(\"gradientUnits\", \"userSpaceOnUse\")\n      .attr(\"cx\", \"0%\")\n      .attr(\"cy\", \"0%\")\n      .attr(\"r\", \"45%\")\n      .selectAll(\"stop\")\n      .data(d3.range(numColors))\n      .enter().append(\"stop\")\n      .attr(\"offset\", function(d,i) { return (i/(numColors-1)*50 + 40) + \"%\"; })\n      .attr(\"stop-color\", function(d) { return colorScale(d); });\n\n    var yAxis = d3.selectAll('.radial').append(\"g\")\n    .attr(\"text-anchor\", \"middle\");\n\n    var yTick = yAxis\n    .selectAll(\".radial\")\n    // .selectAll(\"g\")\n    .data(y.ticks(5))\n    .enter().append(\"g\");\n\n    yTick.append(\"circle\")\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"#D8D8D8\")\n      .attr(\"opacity\", 0.5)\n      .attr(\"r\", function(d) {return y(d)});\n\n    //add avg\n    yAxis.append(\"circle\")\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"#2A41E5\")\n      .attr(\"stroke-width\", 3)\n      .attr(\"r\", function() { return y(mean) });\n\n    yAxis.append(\"circle\")\n      .attr(\"fill\", \"white\")\n      .attr(\"stroke\", \"black\")\n      .attr(\"opacity\", 1)\n      .attr(\"r\", function() { return y(y.domain()[0])});\n\n    yTick.append(\"text\")\n      .attr(\"y\", function(d) { return -y(d); })\n      .attr(\"dy\", \"0.35em\")\n      .text(function(d, i) {\n        if (d === 0) {\n        return \"\"\n      }\n      else {\n        return d\n      }\n    });\n\n\n      var xAxis = svg.selectAll('.radial').append(\"g\");\n\n      var xTick = xAxis\n        // .selectAll(\"g\")\n        .selectAll(\".radial\")\n        .data(x.ticks(24))\n        .enter().append(\"g\")\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"transform\", function(d) {\n        return \"rotate(\" + ((x(d)) * 180 / Math.PI - 90) + \")translate(\" + innerRadius + \",0)\";\n        });\n\n      xTick.append(\"line\")\n        .attr(\"x2\", -5)\n        .attr(\"stroke\", \"#595D5C\");\n\n      xTick.append(\"text\")\n        .attr(\"transform\", function(d) {\n          var angle = x(d.key);\n          return ((angle < Math.PI / 2) || (angle > (Math.PI * 3 / 2))) ? \"rotate(90)translate(0,22)\" : \"rotate(-90)translate(0, -15)\"; })\n            .text(function(d) {\n            return d;\n      })\n      .style(\"font-size\", 10)\n      .attr(\"color\", \"#595D5C\")\n      .attr(\"opacity\", 1)\n\n\n      // var lineLength = linePlot.node().getTotalLength();\n      //\n      // linePlot\n      //   .attr(\"stroke-dasharray\", lineLength + \" \" + lineLength)\n      //   .attr(\"stroke-dashoffset\", -lineLength)\n      //   .transition()\n      //   .duration(1500)\n      //   .ease(d3.easeLinear)\n      //   .attr(\"stroke-dashoffset\", 0);\n\n  }\n\n  render() {\n    return(\n      <div className=\"radialContainer center\">\n\n        <svg width={650} height={650}\n            ref=\"svgElem\">\n        </svg>\n\n      </div>\n    )\n  }\n}\n\nexport default RadialLineChart;\n","import React, {createRef} from 'react';\nimport * as d3 from \"d3\";\nimport {scaleLinear, scaleBand, scaleTime, schemeCategory20c, scaleQuantize } from 'd3-scale';\nimport { select as d3Select } from 'd3-selection'\nimport moment from 'moment'\n\n// import data from './../data/itching.csv';\n// import *  as dataParser from './dataParser.js';\nimport './barChart.scss'\n\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 800 - margin.left - margin.right,\n    height = 400 - margin.top - margin.bottom;\n\n// set the ranges\nvar xBasic = scaleBand()\n          .range([0, width])\n          .padding(0.1);\nvar yBasic = scaleLinear()\n          .range([height, 0]);\n\n\nclass BarChart extends React.Component {\n\n componentDidUpdate(prevProps) {\n   if (prevProps !== this.props) {\n     d3.select(\"svg\").selectAll(\"*\").remove();\n     this.renderBarChart();\n     // this.renderBarChartBasic();\n   }\n }\n\n componentDidMount() {\n    this.renderBarChart();\n    // this.renderBarChartBasic();\n  }\n\n  //GRADIENT CHART\n renderBarChart() {\n\n  const data = this.props.dataDayHours;\n  const x = scaleBand()\n    .rangeRound([0, width])\n    .domain(data.map((d) => d.key))\n    .padding(0.1);\n\n  const y = scaleLinear()\n    .range([height, 0])\n    .domain([\n      d3.min(data, function(d) { return d.value; }),\n      d3.max(data, function(d) { return d.value })\n    ])\n    .nice();\n\n  const svg = d3.select(this.refs.svgElemBar);\n\n  const graphArea = svg\n  .append('g')\n  .attr('transform', `translate(${margin.left}, ${margin.top})`);\n\n  const defs = svg.append('defs');\n\n  var numColors = 10;\n  var colorScale = d3.scaleLinear()\n    .domain([0,(numColors-1)/2,numColors-1])\n    .range(['#2A4858', \"#74D877\", \"#F5D801\"])\n    .interpolate(d3.interpolateHcl);\n\n  const bgGradient = defs.append(\"linearGradient\")\n    .attr(\"id\", \"bg-gradient\")\n    // .attr('gradientTransform', 'rotate(90)')\n    .attr(\"x1\", \"0%\")\n    .attr(\"y1\", \"0%\")\n    .attr(\"x2\", \"0%\")\n    .attr(\"y2\", \"100%\")\n    .attr(\"gradientUnits\", \"userSpaceOnUse\")\n    .selectAll(\"stop\")\n    .data(d3.range(numColors))\n    .enter().append(\"stop\")\n    .attr(\"offset\", function(d,i) { return (i/(numColors-1)*50 + 10) + \"%\"; })\n    .attr(\"stop-color\", function(d) { return colorScale(d); });\n\n  defs\n    .append('clipPath')\n    .attr('id', 'clip-bar-rects')\n    .selectAll('bar')\n    .data(data)\n    .enter()\n    .append('rect')\n    .attr(\"x\", d => x(d.key))\n    .attr(\"y\", d => y(d.value))\n    .attr(\"width\", x.bandwidth())\n    .attr(\"height\", d => height - y(d.value));\n\n  const clipPath = graphArea\n    .append('g')\n    .attr('clip-path', `url(#clip-bar-rects)`);\n\n  clipPath\n    .append('rect')\n    .attr('x', 0)\n    .attr('y', 0)\n    .attr('width', width)\n    .attr('height', height)\n    .style('fill', 'url(#bg-gradient)');\n\n  const xAxis = d3.axisBottom(x);\n  const yAxis = d3.axisLeft(y).ticks(5);\n\n  const ax = graphArea\n    .append('g')\n    .attr('class', 'axis')\n    .attr('transform', `translate(0, ${height})`)\n    .call(xAxis);\n\n  ax.selectAll('text')\n    .style(\"text-anchor\", \"start\")\n    .style(\"alignment-baseline\", \"middle\")\n    .attr(\"transform\", `translate(-3)`)\n\n  graphArea\n    .append('g')\n    .attr('class', 'axis')\n    .call(yAxis);\n\n }\n\n //BASIC CHART\n renderBarChartBasic() {\n    const data = this.props.dataDayHours;\n    console.log('barchart data ', data)\n\n    const svg = d3.select(this.refs.svgElemBar);\n\n    var colors = [\"#F5D801\", \"#74D877\", '#2A4858'];\n\n    var colorScaleBasic = scaleQuantize()\n      .domain([0, colors.length - 1, d3.max(data, function(d) {\n        return d.value;\n      })])\n      .range(colors);\n\n\n    xBasic.domain(data.map(function(d) { return d.key; }));\n    yBasic\n    .domain([\n      d3.min(data, function(d) { return d.value; }),\n      d3.max(data, function(d) { return d.value })\n    ])\n    .nice();\n    // .domain([0, d3.max(data, function(d) { return d.value; })]);\n\n    // append the rectangles for the bar chart\n    svg.selectAll(\".bar\")\n        .data(data)\n      .enter().append(\"rect\")\n        .attr(\"class\", \"bar\")\n        .attr(\"x\", function(d) { return xBasic(d.key); })\n        .attr(\"width\", xBasic.bandwidth())\n        .attr(\"y\", function(d) { return yBasic(d.value); })\n        .attr(\"height\", function(d) { return height - yBasic(d.value); })\n        .attr(\"fill\", function(d) { return colorScaleBasic(d.value) });\n\n    // add the x Axis\n    svg.append(\"g\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(xBasic));\n\n    // add the y Axis\n    svg.append(\"g\")\n        .call(d3.axisLeft(yBasic));\n\n }\n\n\n  render() {\n    return(\n      <div className=\"radialContainer center\">\n\n      <svg width={800} height={400}\n          ref=\"svgElemBar\">\n      </svg>\n\n      </div>\n    )\n  }\n}\n\nexport default BarChart;\n","import React, { Component } from 'react'\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport * as d3 from \"d3\";\nimport * as d3Axis from 'd3-axis'\nimport { select as d3Select } from 'd3-selection'\n\nimport './menu.scss'\n\n\nclass Menu extends Component {\n\n\n  constructor() {\n    super();\n    this.state = {\n      chartType: 'Radial'\n    }\n  }\n\n  componentDidMount() {\n\n  }\n\n  componentDidUpdate() {\n\n  }\n\n  onDropdownChange(e) {\n    this.props.setDate(e.value);\n  }\n\n  onLineChange(e) {\n    if (e.value === 'Basis') {\n      this.props.setLineType(d3.curveBasisClosed, 'Basis');\n    }\n    if (e.value === 'Linear') {\n      this.props.setLineType(d3.curveLinearClosed, 'Linear');\n    }\n    if (e.value === 'Bundle') {\n      this.props.setLineType(d3.curveBundle, 'Bundle');\n    }\n    if (e.value === 'Cardinal') {\n      this.props.setLineType(d3.curveCardinalClosed, 'Cardinal');\n    }\n    if (e.value === 'Catmull') {\n      this.props.setLineType(d3.curveCatmullRomClosed, 'Catmull');\n    }\n    if (e.value === 'Natural') {\n      this.props.setLineType(d3.curveNatural, 'Natural');\n    }\n  }\n\n  onClockConfigChange(e) {\n    if (e.value === 'Midnight Up') {\n      this.props.setClockConfig('Midnight Up');\n    }\n    if (e.value === 'Midnight Down') {\n      this.props.setClockConfig('Midnight Down');\n    }\n  }\n\n  onButtonClick(event) {\n    console.log(event.target.name)\n    this.props.setChartType(event.target.name)\n  }\n\n  render() {\n\n    const defaultOption = Object.keys(this.props.dayInsights)[0];\n    const lines = ['Cardinal', 'Linear', 'Basis', 'Bundle', 'Catmull', 'Natural'];\n    const clockConfig = ['Midnight Up', 'Midnight Down']\n    const firstValue = this.props.firstValue || defaultOption;\n    const secondValue = this.props.secondValue || lines[0];\n    const configValue = this.props.configValue || clockConfig[0];\n\n    return (\n      <div className=\"menu\">\n        <h1>Daily insights</h1>\n        <div className=\"btnsHolder\">\n          Graph type\n          <br /><br />\n          <button className={ (this.props.chartType === 'Radial') ? 'btn btn-active': 'btn-normal btn' }\n            onClick={(e) => this.onButtonClick(e)}\n            name=\"Radial\">Radial</button>\n          <button className={ (this.props.chartType === 'BarChart') ? 'btn btn-active': 'btn btn-normal' }\n            onClick={(e) => this.onButtonClick(e)}\n            name=\"BarChart\">Bar chart</button>\n        </div>\n        Day\n        <Dropdown options={Object.keys(this.props.dayInsights)} onChange={(e) => this.onDropdownChange(e)} value={firstValue} placeholder=\"Select an option\" />\n\n        {\n          this.props.chartType === 'Radial' && (\n          <div>\n          <p>Line type</p>\n          <Dropdown options={lines} onChange={(e) => this.onLineChange(e)} value={secondValue} placeholder=\"Select an option\" />\n          <p>Clock configuration</p>\n          <Dropdown options={clockConfig} onChange={(e) => this.onClockConfigChange(e)} value={configValue} placeholder=\"Select an option\" />\n          </div>\n        )}\n        {\n          this.props.chartType === 'BarChart' && (\n            <div>\n\n            </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default Menu;\n","import React from 'react';\n// import logo from './logo.svg';\nimport Scatter from './Scatter/Scatter'\nimport ScatterMY from './ScatterMY/ScatterMY'\nimport RadialLineChart from './RadialLineChart/RadialLineChart'\n// import RadialLineChartLib from './RadialLineChart/RadialLineChartLib'\nimport BarChart from './BarChart/BarChart'\nimport Menu from './Menu/Menu'\nimport * as d3 from \"d3\";\n\nimport data from './data/itching.csv';\nimport *  as dataParser from './dataParser';\nimport './App.scss';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      currentDay: '2017-02-25',\n      lineType: d3.curveCardinalClosed,\n      chartType: 'Radial',\n      clockConfig: 'Midnight Up'\n    };\n  }\n\n  componentDidMount() {\n    d3.csv(data).then(data => {\n\n      // console.log('csv', data)\n      // console.log(\"how many in day \", dataParser.howManyInDay(dataParser.parseData(data)))\n      // console.log(\"how many in month \", dataParser.howManyInMonth(dataParser.parseData(data)))\n      // console.log(\"how many weekday in month \", dataParser.howManyWeekDayMonth(dataParser.parseData(data), dataParser.howManyInDay(dataParser.parseData(data))))\n      // console.log('day insights', dataParser.getDayInsights(data))\n      // console.log('day hours', dataParser.getDayHours(dataParser.getDayInsights(data), this.state.currentDay))\n      // console.log('day hours ARR', dataParser.getDayHoursArr(dataParser.getDayInsights(data), this.state.currentDay))\n\n      // console.log('obj vals', Object.values(dataParser.getDayInsights(data)))\n\n      const dataDayHours = dataParser.getDayHoursArr(dataParser.getDayInsights(data), this.state.currentDay);\n      // const mean = dataParser.dayMean(dataDayHours)\n      const dayInsights = dataParser.getDayInsights(data);\n\n      this.setState({\n        data,\n        dataDayHours,\n        dayInsights,\n        // mean\n      });\n   });\n  }\n\n  setDate(date) {\n    const currentDay = date;\n    const dataDayHours = dataParser.getDayHoursArr(dataParser.getDayInsights(this.state.data), date);\n    this.setState(prevState => ({\n      ...prevState.lineType,\n      ...prevState.lineTypeStr,\n      ...prevState.clockConfig,\n      currentDay,\n      dataDayHours\n  }));\n  }\n\n  setLineType(lineType, lineTypeStr) {\n    console.log('set line type ', lineTypeStr)\n    this.setState(prevState => ({\n      ...prevState.clockConfig,\n      lineType,\n      lineTypeStr\n    }));\n  }\n\n  setClockConfig(clockConfig) {\n    console.log('set clock config type ', clockConfig)\n    this.setState({\n      clockConfig\n    })\n  }\n\n  setChartType(chartType) {\n\n    console.log('set chart type ', chartType)\n    this.setState(prevState => ({\n      ...prevState.lineType,\n      ...prevState.lineTypeStr,\n      ...prevState.currentDay,\n      ...prevState.dataDayHours,\n      ...prevState.clockConfig,\n      chartType\n    }))\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"menuContainer\">\n          {\n            this.state.dayInsights &&\n            <Menu\n              dayInsights={this.state.dayInsights}\n              setDate={date => this.setDate(date)}\n              setLineType={(lineType, lineTypeStr) => this.setLineType(lineType, lineTypeStr)}\n              setClockConfig = {(clockConfig) => this.setClockConfig(clockConfig)}\n              configValue = {this.state.clockConfig}\n              firstValue={this.state.currentDay}\n              secondValue={this.state.lineTypeStr}\n              chartType={this.state.chartType}\n              setChartType={chartType => this.setChartType(chartType)}\n            />\n        }\n        </div>\n        <div className=\"chartContainer\">\n          { this.state.dataDayHours && this.state.chartType === 'Radial' && <RadialLineChart currentDay={this.state.currentDay}\n            dataDayHours={this.state.dataDayHours}\n            dayInsights={this.state.dayInsights}\n            lineType={this.state.lineType}\n            clockConfig={this.state.clockConfig}\n            // mean={this.state.mean}\n          />\n          }\n          {\n            this.state.dataDayHours && this.state.chartType === 'BarChart' && <BarChart currentDay={this.state.currentDay}\n              dataDayHours={this.state.dataDayHours}\n              dayInsights={this.state.dayInsights}\n              lineType={this.state.lineType}/>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}